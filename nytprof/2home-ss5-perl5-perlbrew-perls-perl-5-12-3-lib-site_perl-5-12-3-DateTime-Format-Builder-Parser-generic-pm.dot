digraph {
graph [overlap=false]
subgraph cluster_DateTime_Format_Builder_Parser_Regex {
	label="DateTime::Format::Builder::Parser::Regex";
	"DateTime::Format::Builder::Parser::Regex::create_parser";
	"DateTime::Format::Builder::Parser::Regex::BEGIN@73";
}
subgraph cluster_Params_Validate_XS {
	label="Params::Validate::XS";
	"Params::Validate::XS::validate";
}
subgraph cluster_Exporter {
	label="Exporter";
	"Exporter::import";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_DateTime_Format_Builder_Parser_generic {
	label="DateTime::Format::Builder::Parser::generic";
	"DateTime::Format::Builder::Parser::generic::BEGIN@2";
	"DateTime::Format::Builder::Parser::generic::generic_parser";
	"DateTime::Format::Builder::Parser::generic::BEGIN@4";
	"DateTime::Format::Builder::Parser::generic::BEGIN@171";
	"DateTime::Format::Builder::Parser::generic::BEGIN@5";
	"DateTime::Format::Builder::Parser::generic::BEGIN@3";
	"DateTime::Format::Builder::Parser::generic::new";
}
"DateTime::Format::Builder::Parser::Regex::create_parser" -> "DateTime::Format::Builder::Parser::generic::new";
"DateTime::Format::Builder::Parser::generic::BEGIN@4" -> "Exporter::import";
"DateTime::Format::Builder::Parser::generic::BEGIN@5" -> "Exporter::import";
"DateTime::Format::Builder::Parser::Regex::BEGIN@73" -> "DateTime::Format::Builder::Parser::generic::BEGIN@3";
"DateTime::Format::Builder::Parser::generic::generic_parser" -> "Params::Validate::XS::validate";
"DateTime::Format::Builder::Parser::generic::BEGIN@171" -> "strict::unimport";
"DateTime::Format::Builder::Parser::generic::BEGIN@3" -> "vars::import";
"DateTime::Format::Builder::Parser::generic::BEGIN@2" -> "strict::import";
"DateTime::Format::Builder::Parser::Regex::BEGIN@73" -> "DateTime::Format::Builder::Parser::generic::BEGIN@171";
"DateTime::Format::Builder::Parser::Regex::BEGIN@73" -> "DateTime::Format::Builder::Parser::generic::BEGIN@2";
"DateTime::Format::Builder::Parser::Regex::create_parser" -> "DateTime::Format::Builder::Parser::generic::generic_parser";
"DateTime::Format::Builder::Parser::Regex::BEGIN@73" -> "DateTime::Format::Builder::Parser::generic::BEGIN@4";
"DateTime::Format::Builder::Parser::Regex::BEGIN@73" -> "DateTime::Format::Builder::Parser::generic::BEGIN@5";
}
